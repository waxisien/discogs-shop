{"version":3,"sources":["redux/actionTypes.ts","RecordCard.tsx","redux/actions.ts","redux/selectors.ts","Store.tsx","CartIcon.tsx","App.tsx","reportWebVitals.js","redux/reducers/cart.ts","redux/reducers/inventory.ts","redux/reducers/index.ts","redux/store.ts","records.ts","index.tsx"],"names":["ADD_TO_CART","CLEAR_CART","INIT_INVENTORY","RecordCard","props","record","dispatch","useDispatch","headerTitle","artist","name","Card","elevation","background","CardHeader","pad","format","CardBody","height","picture","Image","fit","src","CardFooter","horizontal","Box","direction","priceCurrency","priceAmount","toFixed","Button","icon","Shop","hoverIndicator","tip","onClick","recordId","type","React","memo","getCartSize","store","cart","getCartState","cartIds","length","compareRecords","a","b","getRecordsSorted","Object","values","inventory","getInventoryState","data","sort","columns","small","medium","large","xlarge","Responsive","children","ResponsiveContext","Consumer","size","Grid","Store","sortedRecords","useSelector","fill","gap","margin","map","CartIcon","cartSize","Stack","anchor","Cart","round","Text","theme","global","breakpoints","value","font","family","AppBar","tag","align","justify","left","right","vertical","style","zIndex","App","useState","showSidebar","setShowSidebar","Grommet","full","themeMode","Heading","level","flex","overflow","Layer","FormClose","Collapsible","open","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","state","action","records","reduce","obj","createStore","nanoid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ebd6511.chunk.js","sourcesContent":["export const ADD_TO_CART = \"ADD_TO_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const INIT_INVENTORY = \"INIT_INVENTORY\";\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Image,\n} from \"grommet\";\nimport { Shop } from \"grommet-icons\";\nimport { useDispatch } from \"react-redux\";\n\nimport { IRecord } from \"src/redux/reducers/inventory\";\nimport { addToCart } from \"src/redux/actions\";\n\ninterface IRecordProps {\n  record: IRecord;\n}\n\nconst RecordCard = (props: IRecordProps) => {\n  const { record } = props;\n  const dispatch = useDispatch();\n  const headerTitle = `${record.artist} - ${record.name}`;\n\n  const addItemToCart = () => dispatch(addToCart(record.recordId));\n\n  return (\n    <Card elevation=\"medium\" key={record.name} background=\"light-1\">\n      <CardHeader pad=\"medium\" background=\"light-3\">\n        {headerTitle} {record.format}\n      </CardHeader>\n      <CardBody height=\"small\" pad=\"small\">\n        {record.picture && <Image fit=\"contain\" src={record.picture} />}\n      </CardBody>\n      <CardFooter pad={{ horizontal: \"small\" }} background=\"light-2\">\n        <Box direction=\"row\">\n          {record.priceCurrency}\n          <b>{record.priceAmount.toFixed(2)}</b>\n        </Box>\n        <Button\n          icon={<Shop />}\n          hoverIndicator\n          tip=\"Add to cart\"\n          onClick={addItemToCart}\n        />\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default React.memo(RecordCard);\n","import { IRecord } from \"src/redux/reducers/inventory\";\nimport { ADD_TO_CART, CLEAR_CART, INIT_INVENTORY } from \"src/redux/actionTypes\";\n\ninterface AddToCartAction {\n  type: typeof ADD_TO_CART;\n  recordId: string;\n}\nexport const addToCart = (recordId: string): AddToCartAction => ({\n  type: ADD_TO_CART,\n  recordId,\n});\n\ninterface ClearCartAction {\n  type: typeof CLEAR_CART;\n}\nexport const clearCart = (): ClearCartAction => ({\n  type: CLEAR_CART,\n});\n\nexport type CartActionTypes = AddToCartAction | ClearCartAction;\n\ninterface InitInventoryAction {\n  type: typeof INIT_INVENTORY;\n  records: IRecord[];\n}\nexport const initInventory = (records: IRecord[]): InitInventoryAction => ({\n  type: INIT_INVENTORY,\n  records,\n});\n\nexport type InventoryActionTypes = InitInventoryAction;\n","import { RootState } from \"src/redux/reducers\";\nimport { IRecord } from \"src/redux/reducers/inventory\";\n\nconst getCartState = (store: RootState) => store.cart;\nconst getInventoryState = (store: RootState) => store.inventory;\n\nexport const getCartSize = (store: RootState) =>\n  getCartState(store).cartIds.length;\n\nconst compareRecords = (a: IRecord, b: IRecord) => {\n  if (a.artist === b.artist) {\n    return a.name > b.name ? 1 : -1;\n  }\n  return a.artist > b.artist ? 1 : -1;\n};\n\nexport const getRecordsSorted = (store: RootState) =>\n  Object.values(getInventoryState(store).data).sort(compareRecords);\n","import React from \"react\";\nimport { Box, Grid, ResponsiveContext } from \"grommet\";\nimport { useSelector } from \"react-redux\";\n\nimport RecordCard from \"src/RecordCard\";\nimport { IRecord } from \"src/redux/reducers/inventory\";\nimport { getRecordsSorted } from \"src/redux/selectors\";\n\ninterface ResponsiveSizes {\n  [size: string]: string[];\n}\n\n// If the size is small, we only see 1 column\n// If the size is medium, we only see 2 columns\n// If the size is either large or xlarge, we see 3 columns\nconst columns: ResponsiveSizes = {\n  small: [\"auto\"],\n  medium: [\"auto\", \"auto\"],\n  large: [\"auto\", \"auto\", \"auto\", \"auto\"],\n  xlarge: [\"auto\", \"auto\", \"auto\", \"auto\", \"auto\"],\n};\n\ninterface ResponsiveProps {\n  children: JSX.Element[];\n  gap: string;\n  margin: string;\n}\nconst Responsive = ({ children, ...props }: ResponsiveProps) => (\n  <ResponsiveContext.Consumer>\n    {(size) => {\n      return (\n        <Grid {...props} columns={columns[size]}>\n          {children}\n        </Grid>\n      );\n    }}\n  </ResponsiveContext.Consumer>\n);\n\nconst Store = () => {\n  const sortedRecords = useSelector(getRecordsSorted);\n  return (\n    <Box fill>\n      <Responsive gap=\"medium\" margin=\"medium\">\n        {sortedRecords.map((record: IRecord) => (\n          <RecordCard record={record} key={record.recordId} />\n        ))}\n      </Responsive>\n    </Box>\n  );\n};\n\nexport default Store;\n","import { Stack, Box, Text } from 'grommet';\nimport { Cart } from 'grommet-icons';\nimport { useSelector } from 'react-redux';\n\nimport { getCartSize } from 'src/redux/selectors';\n\nconst CartIcon = () => {\n  const cartSize = useSelector(getCartSize);\n\n  // TODO: fix icon size\n  return (\n    <Stack anchor=\"top-right\">\n      <Cart size=\"large\"/>  \n      {cartSize &&\n        <Box\n          background=\"accent-4\"\n          pad={{ horizontal: 'xsmall' }}\n          round\n        >\n          <Text size=\"xsmall\">{cartSize}</Text>\n        </Box>\n      }\n    </Stack>\n  );\n};\n\nexport default CartIcon;\n","import { useState } from \"react\";\nimport { Box, Button, Collapsible, Heading, Grommet, Layer, ResponsiveContext } from 'grommet';\nimport { FormClose } from 'grommet-icons';\n\nimport Store from 'src/Store';\nimport CartIcon from 'src/CartIcon';\n\nconst theme = {\n  global: {\n    breakpoints: {\n      small: {\n        value: 600,\n      },\n      medium: {\n        value: 1000,\n      },\n      large: {\n        value: 1600,\n      },\n      xlarge: {\n        value: 2000,\n      },\n    },\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n  },\n};\n\nconst AppBar = (props: any) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation='medium'\n    style={{ zIndex: '1' }}\n    {...props}\n  />\n);\n\nconst App = () => {\n  const [showSidebar, setShowSidebar] = useState(false);\n  return (\n    <Grommet theme={theme} full themeMode=\"dark\">\n      <ResponsiveContext.Consumer>\n        {size => (\n          <Box fill>\n            <AppBar>\n              <Heading level='3' margin='none'>My store</Heading>\n              <Button\n                icon={<CartIcon />}\n                onClick={() => setShowSidebar(!showSidebar)}\n              />\n            </AppBar>\n            <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\n              <Box flex align='center' justify='center'>\n                <Store />\n              </Box>\n              {(!showSidebar || size !== 'small') ? (\n                <Collapsible direction=\"horizontal\" open={showSidebar}>\n                  <Box\n                    flex\n                    width='medium'\n                    background='light-2'\n                    elevation='small'\n                    align='center'\n                    justify='center'\n                  >\n                    shopping cart\n                  </Box>\n                </Collapsible>\n              ): (\n                <Layer>\n                  <Box\n                    background='light-2'\n                    tag='header'\n                    justify='end'\n                    align='center'\n                    direction='row'\n                  >\n                    <Button\n                      icon={<FormClose />}\n                      onClick={() => setShowSidebar(false)}\n                    />\n                  </Box>\n                  <Box\n                    fill\n                    background='light-2'\n                    align='center'\n                    justify='center'\n                  >\n                    shopping cart\n                  </Box>\n                </Layer>\n              )}\n            </Box>\n          </Box>\n        )}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CartActionTypes } from \"src/redux/actions\";\nimport { ADD_TO_CART, CLEAR_CART } from \"src/redux/actionTypes\";\n\ninterface CartState {\n  cartIds: string[];\n}\n\nconst initialState: CartState = {\n  cartIds: [],\n};\n\nexport default function cartReducer(\n  state = initialState,\n  action: CartActionTypes\n): CartState {\n  switch (action.type) {\n    case ADD_TO_CART: {\n      return {\n        ...state,\n        cartIds: [...state.cartIds, action.recordId],\n      };\n    }\n\n    case CLEAR_CART: {\n      return initialState;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { InventoryActionTypes } from \"src/redux/actions\";\nimport { INIT_INVENTORY } from \"src/redux/actionTypes\";\n\nexport interface IRecord {\n  recordId: string;\n  artist: string;\n  name: string;\n  format: string;\n  picture: string;\n  priceAmount: number;\n  priceCurrency: string;\n}\n\ninterface IRecordObject {\n  [recordId: string]: IRecord;\n}\n\ninterface IInventoryState {\n  data: IRecordObject;\n}\n\nconst initialState: IInventoryState = {\n  data: {},\n};\n\nexport default function inventoryReducer(\n  state = initialState,\n  action: InventoryActionTypes\n): IInventoryState {\n  switch (action.type) {\n    case INIT_INVENTORY: {\n      return {\n        ...state,\n        data: action.records.reduce((obj: IRecordObject, record: IRecord) => {\n          obj[record.recordId] = record;\n          return obj;\n        }, {}),\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport cartReducer from \"src/redux/reducers/cart\";\nimport inventoryReducer from \"src/redux/reducers/inventory\";\n\nconst rootReducer = combineReducers({\n  cart: cartReducer,\n  inventory: inventoryReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\n\nimport rootReducer from \"src/redux/reducers\";\n\nexport default createStore(rootReducer);\n","import { nanoid } from \"nanoid\";\n\nimport { IRecord } from \"src/redux/reducers/inventory\";\n\n// Let's say this is returned from an API\nexport const records: IRecord[] = [\n  {\n    recordId: nanoid(),\n    name: \"The Chronic\",\n    artist: \"Dr Dre\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"2xLP\",\n    picture:\n      \"https://img.discogs.com/mpWCoWoUh2sBD0ikn7G8Vd-GsfU=/fit-in/600x600/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-226082-1239894271.jpeg.jpg\",\n  },\n  {\n    recordId: nanoid(),\n    name: \"The Unseen\",\n    artist: \"Quasimoto\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"2xLP\",\n    picture:\n      \"https://img.discogs.com/RsPkDEyp5PlH4brZbIyDlK6PrB4=/fit-in/600x611/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-1671758-1328820485.jpeg.jpg\",\n  },\n  {\n    recordId: nanoid(),\n    name: \"Madvillainy\",\n    artist: \"Madvillain\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"2xLP\",\n    picture:\n      \"https://img.discogs.com/rU_Fvcm_ippMVC2i6irdoIykKjo=/fit-in/600x600/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-242785-1403277327-2810.jpeg.jpg\",\n  },\n  {\n    recordId: nanoid(),\n    name: \"Songs Of Experience\",\n    artist: \"David Axelrod\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"LP\",\n    picture:\n      \"https://img.discogs.com/XpXz1D4A3ChmcwBOohM4uWx5Uxg=/fit-in/600x596/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-14878373-1583339448-1084.jpeg.jpg\",\n  },\n  {\n    recordId: nanoid(),\n    name: \"Song Of Innocence\",\n    artist: \"David Axelrod\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"LP\",\n    picture:\n      \"https://img.discogs.com/oFM3l0HkEe1g88ZJi5W8zYEiq9E=/fit-in/500x500/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-1992378-1264442248.jpeg.jpg\",\n  },\n  {\n    recordId: nanoid(),\n    name: \"Messiah\",\n    artist: \"David Axelrod\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"LP\",\n    picture:\n      \"https://img.discogs.com/Bc3l5CbbJ9VgtWNWiVWwohnkMk4=/fit-in/300x300/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-387924-1159652247.jpeg.jpg\",\n  },\n  {\n    recordId: nanoid(),\n    name: \"Illmatic\",\n    artist: \"Nas\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"LP\",\n    picture:\n      \"https://img.discogs.com/z_2ZaMM6SeRNIJc210m3v8wnWb0=/fit-in/500x490/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-392604-1177019228.jpeg.jpg\",\n  },\n  {\n    recordId: nanoid(),\n    name: \"Fantastic Vol. 2\",\n    artist: \"Slum Village\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"3xLP\",\n    picture:\n      \"https://img.discogs.com/nGkLAMemBczyoy7CcRwLWp-AviY=/fit-in/600x603/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-351045-1346271283-8593.jpeg.jpg\",\n  },\n  {\n    recordId: nanoid(),\n    name: \"Gentle Giant\",\n    artist: \"Gentle Giant\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"LP\",\n    picture:\n      \"https://img.discogs.com/JoBXRYDaCyF83-Aq6cGScd98sTw=/fit-in/600x608/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-1048171-1456393209-1045.jpeg.jpg\",\n  },\n  {\n    recordId: nanoid(),\n    name: \"Earth Rot\",\n    artist: \"David Axelrod\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"LP\",\n    picture:\n      \"https://img.discogs.com/Vy7YoP7n2H6A5lUvDTCFqbXYLCI=/fit-in/600x602/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-679324-1341903623-6518.jpeg.jpg\",\n  },\n  {\n    recordId: nanoid(),\n    name: \"Aqualung\",\n    artist: \"Jethro Tull\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"LP\",\n    picture:\n      \"https://img.discogs.com/tnEqmcyhhKwA-JaGUFXWDuzu1Vg=/fit-in/600x592/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-708318-1586624955-5477.jpeg.jpg\",\n  },\n  {\n    recordId: nanoid(),\n    name: \"Operation: Doomsday\",\n    artist: \"MF DOOM\",\n    priceAmount: 12.0,\n    priceCurrency: \"CA$\",\n    format: \"3xLP\",\n    picture:\n      \"https://img.discogs.com/9QZgA_wr9Bj6OURgUTo4lz38K8g=/fit-in/600x600/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-213193-1521377544-8437.jpeg.jpg\",\n  },\n];\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"src/App\";\nimport reportWebVitals from \"src/reportWebVitals\";\nimport store from \"src/redux/store\";\nimport { initInventory } from \"src/redux/actions\";\nimport { records } from \"src/records\";\n\nstore.dispatch(initInventory(records));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}